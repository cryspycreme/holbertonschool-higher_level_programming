The ``integer_validator`` module
=============================

Using ``integer_validator``
-------------------

Import function from module 7-base_geometry.py:
>>> int_validator = __import__('7-base_geometry').BaseGeometry.integer_validator

Import class from module 7-base.geometry.py:
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
    >>> bg = BaseGeometry()
    
Tests:
    Test 1 - value is not an integer
    >>> bg.integer_validator("my_int", "bob")
    Traceback (most recent call last):
    ...
    TypeError: my_int must be an integer

    Test 2 - value is <= 0
    >>> bg.integer_validator("name", -1)
    Traceback (most recent call last):
    ...
    ValueError: name must be greater than 0

    Test 3 - no arguments passed in
    >>> bg.integer_validator()
    Traceback (most recent call last):
    ...
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

    Test 4 - only one argument passed in
    >>> bg.integer_validator("name")
    Traceback (most recent call last):
    ...
    TypeError: integer_validator() missing 1 required positional argument: 'value'
